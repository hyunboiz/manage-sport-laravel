@extends('layouts.user.app')

@section('title', 'ƒê·∫∑t s√¢n')

@section('styles')
<style>
    /* General Header Styles */
    .app-header {
        background-color: #004d40; /* M√†u xanh ƒë·∫≠m nh∆∞ h√¨nh */
        color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .app-header .back-arrow {
        color: white;
        font-size: 1.5rem;
    }

    .app-header .date-picker-container {
        position: relative;
        width: 150px; /* Adjust as needed */
    }

    .app-header .date-picker {
        color: rgb(0, 0, 0);
        border: none;
        text-align: center;
        cursor: pointer;
    }

    .app-header .date-picker:focus {
        box-shadow: none;
    }

    .app-header .calendar-icon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        color: white;
        pointer-events: none; /* Allows click through to input */
    }

    /* Legend Section */
    .legend-section {
        background-color: #e0f2f1; /* N·ªÅn xanh nh·∫°t */
        padding: 10px 15px;
        border-radius: .25rem;
        font-size: 0.9rem;
        display: flex;
        flex-wrap: wrap;
    }

    .legend-box {
        display: inline-block;
        width: 15px;
        height: 15px;
        border-radius: 3px;
        vertical-align: middle;
        margin-right: 5px;
    }

    .legend-box.status-free {
        background-color: #fff;
        border: 1px solid #ced4da;
    }
    .legend-box.status-booked { background-color: #dc3545; } /* Red */
    .legend-box.status-selected { background-color: #007bff; } /* Blue */
    .legend-box.status-pending { background-color: #ffc107; } /* Yellow */
    .legend-box.status-event { background-color: #ff07ea; }
    .legend-box.status-locked { background-color: #c4c0c3; }

    /* Table Specific Styles */
    .schedule-table {
        width: 100%;
        margin-bottom: 1rem;
        color: #212529;
        border-collapse: collapse; /* ƒê·∫£m b·∫£o c√°c border kh√¥ng b·ªã nh√¢n ƒë√¥i */
    }

    .schedule-table th,
    .schedule-table td {
        padding: 0.75rem; /* Padding m·∫∑c ƒë·ªãnh */
        vertical-align: middle;
        border: 1px solid #dee2e6;
        text-align: center;
        height: 40px; /* Chi·ªÅu cao c·ªë ƒë·ªãnh cho √¥ */
        box-sizing: border-box; /* T√≠nh c·∫£ padding v√† border v√†o k√≠ch th∆∞·ªõc */
    }

    .schedule-table thead th {
        vertical-align: bottom;
        border-bottom: 2px solid #dee2e6;
        background-color: #e9ecef; /* M√†u n·ªÅn cho header */
    }

    .schedule-table tbody tr:last-child td {
        border-bottom: 1px solid #dee2e6; /* ƒê·∫£m b·∫£o border cu·ªëi c√πng c·ªßa table */
    }

    /* Make table responsive by wrapping in .table-responsive */
    .table-responsive {
        overflow-x: auto;
    }

    /* Sticky header column (for "S√¢n A, B, C...") */
    .sticky-header-col {
        position: sticky;
        left: 0;
        background-color: #e9ecef; /* Gi·ªØ m√†u n·ªÅn header */
        z-index: 10; /* ƒê·∫£m b·∫£o n√≥ n·∫±m tr√™n khi cu·ªôn ngang */
        border-right: 1px solid #dee2e6;
    }

    /* Styling for selectable cells */
    .schedule-table td {
        background-color: #f8f9fa; /* M√†u n·ªÅn m·∫∑c ƒë·ªãnh cho √¥ tr·ªëng */
        cursor: pointer; /* Bi·ªÉu t∆∞·ª£ng con tr·ªè ƒë·ªÉ ch·ªâ ra c√≥ th·ªÉ click */
        transition: background-color 0.2s ease-in-out; /* Hi·ªáu ·ª©ng chuy·ªÉn m√†u m∆∞·ª£t m√† */
    }

    /* Status: Booked (ƒê√£ ƒë·∫∑t) */
    .schedule-table td[data-status="booked"] {
        background-color: #dc3545; /* Red */
        cursor: not-allowed; /* Kh√¥ng cho ph√©p click */
    }

    /* Status: Pending (Ch·ªù TT) */
    .schedule-table td[data-status="booked-pending"] {
        background-color: #ffc107; /* Yellow */
        cursor: not-allowed; /* C√≥ th·ªÉ v·∫´n kh√¥ng cho ch·ªçn ho·∫∑c cho ph√©p */
    }

    /* Status: Selected (ƒêang ch·ªçn) */
    .schedule-table td.status-selected {
        background-color: #007bff; /* Primary Blue */
        color: white; /* ƒê·ªïi m√†u ch·ªØ cho d·ªÖ nh√¨n */
    }

    /* Hover effect for selectable cells (empty cells) */
    .schedule-table td[data-status="free"]:hover {
        background-color: #e2e6ea; /* Light grey on hover */
    }
    /* Previous CSS styles go here */

    /* Fixed Bottom Bar */
    .fixed-bottom-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #004d40; /* M√†u xanh ƒë·∫≠m nh∆∞ header */
        color: white;
        box-shadow: 0 -2px 5px rgba(0,0,0,0.2);
        z-index: 1000; /* ƒê·∫£m b·∫£o n√≥ n·∫±m tr√™n c√πng */
        padding: 10px 15px; /* Padding cho thanh */
        /* .d-none class c·ªßa Bootstrap s·∫Ω ·∫©n n√≥ m·∫∑c ƒë·ªãnh, JS s·∫Ω remove class n√†y */
    }

    .fixed-bottom-bar .total-info span {
        font-size: 1.1rem;
        font-weight: bold;
    }

    .fixed-bottom-bar .next-button {
        background-color: #f7b200; /* M√†u v√†ng nh∆∞ h√¨nh */
        color: white;
        font-weight: bold;
        padding: 10px 30px;
        border: none;
        border-radius: 5px;
        font-size: 1.2rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .fixed-bottom-bar .next-button:hover {
        background-color: #e0a800; /* M√†u v√†ng ƒë·∫≠m h∆°n khi hover */
    }
    .fixed-bottom-bar .submit-button {
        background-color: #f70800; /* M√†u v√†ng nh∆∞ h√¨nh */
        color: white;
        font-weight: bold;
        padding: 10px 30px;
        border: none;
        border-radius: 5px;
        font-size: 1.2rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .fixed-bottom-bar .submit-button:hover {
        background-color: #ff0000; /* M√†u v√†ng ƒë·∫≠m h∆°n khi hover */
    }
.image-radio img {
    border: 2px solid transparent;
    cursor: pointer;
    opacity: 0.7;
    transition: 0.3s;
}

.image-radio input[type="radio"]:checked + img {
    border-color: #007bff;
    opacity: 1;
}
</style>
@endsection

@section('mainsection')
<div class="container my-5">
  <h2 class="text-center mb-4">üóìÔ∏è Booking Cart</h2>

  <div class="table-responsive">
    <table class="table table-bordered text-center">
      <thead class="thead-dark">
        <tr>
          <th>#</th>
          <th>Field ID</th>
          <th>Name</th>
          <th>Time ID</th>
          <th>Date</th>
          <th>Price</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody id="cart-body">
        <!-- Rows injected by JavaScript -->
      </tbody>
    </table>
  </div>

  <div class="row justify-content-end">
    <div class="col-md-4">
      <div class="card border-info">
        <div class="card-body">
          <h5 class="card-title">üßæ Total Summary</h5>
          <p class="card-text d-flex justify-content-between">
            <span>Total:</span>
            <strong id="total-price">0‚Ç´</strong>
          </p>
          <label>Ph∆∞∆°ng th·ª©c thanh to√°n</label>
          <div class="row">
            @foreach ($payments as $payment)
            <label class="col-md-6 image-radio">
                <input type="radio" name="payment" value="{{ $payment->id }}" class="d-none">
                <img src="{{ $payment->image }}" class="img-thumbnail">
                <p><small>{{ $payment->name }}</small></p>
            </label>
            @endforeach
          </div>
          <button type="button" id="submit-button" class="btn btn-success btn-block">Checkout</button>
        </div>
      </div>
    </div>
  </div>
</div>
@endsection

@section('scripts')
<script>

$('#submit-button').on('click', function () {
    const raw = Cookies.get('bookingCart');
    if (!raw) {
        swal('error', 'Gi·ªè h√†ng tr·ªëng');
        return;
    }

    try {
        const data = JSON.parse(raw);
        if (!data.selections || data.selections.length === 0) {
            swal('error', 'Ch∆∞a c√≥ l·ª±a ch·ªçn n√†o trong gi·ªè');
            return;
        }

        const paymentId = $('input[name="payment"]').val(); // ho·∫∑c g√°n c·ªë ƒë·ªãnh
        if (!paymentId) {
            swal('error', 'Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n');
            return;
        }

        $.ajax({
            url: '/api/checkout',
            method: 'POST',
            data: {
                selections: data.selections,
                payment_id: paymentId,
            },
            success: function (res) {
                swal('success', res.message || 'ƒê·∫∑t s√¢n th√†nh c√¥ng');
                Cookies.remove('bookingCart'); // Xo√° gi·ªè
                setTimeout(() => location.href = '/lich-su-dat-san', 1500);
            },
            error: function (xhr) {
                let msg = 'C√≥ l·ªói x·∫£y ra';
                if (xhr.responseJSON && xhr.responseJSON.error) {
                    msg = xhr.responseJSON.error;
                }
                swal('error', msg);
            }
        });

    } catch (e) {
        swal('error', 'D·ªØ li·ªáu gi·ªè h√†ng kh√¥ng h·ª£p l·ªá');
    }
});

  function loadBookingCartFromCookie() {
    const bookingCart = Cookies.get('bookingCart');
    if (bookingCart) {
      try {
        const cartData = JSON.parse(bookingCart);
        return cartData.selections || [];
      } catch (e) {
        console.error('L·ªói khi parse cookie:', e);
        return [];
      }
    }
    return [];
  }

  function formatCurrency(amount) {
    return Number(amount).toLocaleString('vi-VN') + '‚Ç´';
  }

  function renderCartTable() {
    const selections = loadBookingCartFromCookie();
    const tbody = document.getElementById('cart-body');
    const totalEl = document.getElementById('total-price');
    tbody.innerHTML = '';
    let total = 0;

    selections.forEach((item, index) => {
      const row = document.createElement('tr');

      const price = parseFloat(item.fieldPrice) * (1 + (parseFloat(item.timeExrate) || 0)/100);
      total += price;

      row.innerHTML = `
        <td>${index + 1}</td>
        <td>${item.fieldId}</td>
        <td>S√¢n ${item.name} <br> <small>${item.type}</small></td>
        <td>${item.startHour}:00 - ${item.endHour}:00</td>
        <td>${item.date}</td>
        <td>${formatCurrency(price)}</td>
        <td><button class="btn btn-sm btn-danger" onclick="removeCartItem(${index})">Remove</button></td>
      `;

      tbody.appendChild(row);
    });

    totalEl.textContent = formatCurrency(total);
  }

  function removeCartItem(index) {
    const bookingCart = Cookies.get('bookingCart');
    if (!bookingCart) return;

    const cartData = JSON.parse(bookingCart);
    if (!Array.isArray(cartData.selections)) return;

    cartData.selections.splice(index, 1);
    Cookies.set('bookingCart', JSON.stringify(cartData), { expires: 7 });
    renderCartTable();
  }

  document.addEventListener('DOMContentLoaded', renderCartTable);
</script>
@endsection